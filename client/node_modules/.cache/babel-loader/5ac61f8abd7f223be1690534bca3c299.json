{"ast":null,"code":"var _jsxFileName = \"/Users/macmini/Desktop/workspace/react-signalR-chat-app/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport { HubConnectionBuilder } from \"@microsoft/signalr\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { Chat } from \"./Chat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = \"http://localhost:5000/chat\";\nexport const App = () => {\n  _s();\n\n  const [hubConnection, setHubConnection] = React.useState();\n  const [messageList, setMessageList] = React.useState([]);\n  const [showChat, setShowChat] = React.useState(false);\n  const [room, setRoom] = React.useState(\"\");\n  const [userName, setUserName] = React.useState(\"\"); // React.useEffect(() => {\n  //   createHubConnection();\n  // }, []);\n  // React.useEffect(() => {\n  //   if (hubConnection) {\n  //     hubConnection.on(\"ReceiveMessage\", (author, message) => {\n  //       setMessageList([...messageList, message]);\n  //       console.log(\"message\", message);\n  //     });\n  //   }\n  // }, [hubConnection]);\n\n  const createHubConnection = async () => {\n    const hubConnection = new HubConnectionBuilder().withUrl(URL).build();\n\n    try {\n      await hubConnection.start();\n      console.log(\"Bağlandı.\");\n    } catch (error) {\n      console.log(\"hata:\", error);\n    }\n\n    setHubConnection(hubConnection);\n  };\n\n  const joinRoom = () => {\n    if (userName !== \"\" && room !== \"\") {\n      // socket.emit(\"join_room\", room);\n      createHubConnection();\n      setShowChat(true);\n    } // setMessageList((list) => [...list, text]);\n\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !showChat ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"joinChatContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Join A Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Your name ...\",\n        onChange: event => {\n          setUserName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Room ID ...\",\n        onChange: event => {\n          setRoom(event.target.value);\n        },\n        onKeyPress: event => {\n          event.key === \"Enter\" && joinRoom();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: joinRoom,\n        children: \"Join A Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Chat, {\n      hubConnection: hubConnection,\n      username: userName,\n      room: room\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"CrJoRRqzUmGAJn7tV5HHe/DRbpE=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/macmini/Desktop/workspace/react-signalR-chat-app/client/src/App.tsx"],"names":["HubConnectionBuilder","React","Chat","URL","App","hubConnection","setHubConnection","useState","messageList","setMessageList","showChat","setShowChat","room","setRoom","userName","setUserName","createHubConnection","withUrl","build","start","console","log","error","joinRoom","event","target","value","key"],"mappings":";;;AAAA,SAAwBA,oBAAxB,QAAoD,oBAApD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAASC,IAAT,QAAqB,QAArB;;AAEA,MAAMC,GAAG,GAAG,4BAAZ;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCL,KAAK,CAACM,QAAN,EAA1C;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,KAAK,CAACM,QAAN,CAAyB,EAAzB,CAAtC;AACA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BV,KAAK,CAACM,QAAN,CAAwB,KAAxB,CAAhC;AACA,QAAM,CAACK,IAAD,EAAOC,OAAP,IAAkBZ,KAAK,CAACM,QAAN,CAAuB,EAAvB,CAAxB;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0Bd,KAAK,CAACM,QAAN,CAAuB,EAAvB,CAAhC,CALuB,CAOvB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,QAAMS,mBAAmB,GAAG,YAAY;AACtC,UAAMX,aAAa,GAAG,IAAIL,oBAAJ,GAA2BiB,OAA3B,CAAmCd,GAAnC,EAAwCe,KAAxC,EAAtB;;AAEA,QAAI;AACF,YAAMb,aAAa,CAACc,KAAd,EAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;AACD;;AAEDhB,IAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACD,GAXD;;AAaA,QAAMkB,QAAQ,GAAG,MAAM;AACrB,QAAIT,QAAQ,KAAK,EAAb,IAAmBF,IAAI,KAAK,EAAhC,EAAoC;AAClC;AACAI,MAAAA,mBAAmB;AACnBL,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KALoB,CAOrB;;AACD,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACG,CAACD,QAAD,gBACC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,eAFd;AAGE,QAAA,QAAQ,EAAGc,KAAD,IAAW;AACnBT,UAAAA,WAAW,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD;AALH;AAAA;AAAA;AAAA;AAAA,cAFF,eASE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,aAFd;AAGE,QAAA,QAAQ,EAAGF,KAAD,IAAW;AACnBX,UAAAA,OAAO,CAACW,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD,SALH;AAME,QAAA,UAAU,EAAGF,KAAD,IAAW;AACrBA,UAAAA,KAAK,CAACG,GAAN,KAAc,OAAd,IAAyBJ,QAAQ,EAAjC;AACD;AARH;AAAA;AAAA;AAAA;AAAA,cATF,eAmBE;AAAQ,QAAA,OAAO,EAAEA,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAuBC,QAAC,IAAD;AAAM,MAAA,aAAa,EAAElB,aAArB;AAAoC,MAAA,QAAQ,EAAES,QAA9C;AAAwD,MAAA,IAAI,EAAEF;AAA9D;AAAA;AAAA;AAAA;AAAA;AAxBJ;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD,CAxEM;;GAAMR,G;;KAAAA,G","sourcesContent":["import { HubConnection, HubConnectionBuilder } from \"@microsoft/signalr\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { Chat } from \"./Chat\";\n\nconst URL = \"http://localhost:5000/chat\";\n\nexport const App = () => {\n  const [hubConnection, setHubConnection] = React.useState<HubConnection>();\n  const [messageList, setMessageList] = React.useState<string[]>([]);\n  const [showChat, setShowChat] = React.useState<boolean>(false);\n  const [room, setRoom] = React.useState<string>(\"\");\n  const [userName, setUserName] = React.useState<string>(\"\");\n\n  // React.useEffect(() => {\n  //   createHubConnection();\n  // }, []);\n\n  // React.useEffect(() => {\n  //   if (hubConnection) {\n  //     hubConnection.on(\"ReceiveMessage\", (author, message) => {\n  //       setMessageList([...messageList, message]);\n  //       console.log(\"message\", message);\n  //     });\n  //   }\n  // }, [hubConnection]);\n\n  const createHubConnection = async () => {\n    const hubConnection = new HubConnectionBuilder().withUrl(URL).build();\n\n    try {\n      await hubConnection.start();\n      console.log(\"Bağlandı.\");\n    } catch (error) {\n      console.log(\"hata:\", error);\n    }\n\n    setHubConnection(hubConnection);\n  };\n\n  const joinRoom = () => {\n    if (userName !== \"\" && room !== \"\") {\n      // socket.emit(\"join_room\", room);\n      createHubConnection();\n      setShowChat(true);\n    }\n\n    // setMessageList((list) => [...list, text]);\n  };\n\n  return (\n    <div className=\"App\">\n      {!showChat ? (\n        <div className=\"joinChatContainer\">\n          <h3>Join A Chat</h3>\n          <input\n            type=\"text\"\n            placeholder=\"Your name ...\"\n            onChange={(event) => {\n              setUserName(event.target.value);\n            }}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Room ID ...\"\n            onChange={(event) => {\n              setRoom(event.target.value);\n            }}\n            onKeyPress={(event) => {\n              event.key === \"Enter\" && joinRoom();\n            }}\n          />\n          <button onClick={joinRoom}>Join A Room</button>\n        </div>\n      ) : (\n        <Chat hubConnection={hubConnection} username={userName} room={room} />\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}