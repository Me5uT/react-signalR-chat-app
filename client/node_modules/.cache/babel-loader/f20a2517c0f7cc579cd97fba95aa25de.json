{"ast":null,"code":"var _jsxFileName = \"/Users/macmini/Desktop/workspace/react-signalR-chat-app/client/src/Chat.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Chat = _ref => {\n  _s();\n\n  let {\n    hubConnection,\n    room,\n    username\n  } = _ref;\n  const [currentMessage, setCurrentMessage] = React.useState(\"\");\n  const [messageList, setMessageList] = React.useState([]);\n\n  const sendMessage = async () => {\n    if (currentMessage !== \"\" && hubConnection) {\n      const messageData = {\n        room: room,\n        author: username,\n        message: currentMessage,\n        time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes()\n      };\n      await hubConnection.invoke(\"SendMessage\", messageData.author, messageData.message);\n      setMessageList([...messageList, messageData]);\n      setCurrentMessage(\"\");\n      console.log(\"sendmesage messageList:\", messageList);\n    }\n  };\n\n  React.useEffect(() => {\n    if (hubConnection) {\n      hubConnection.on(\"ReceiveMessage\", (data, data2) => {\n        console.log(\"data:\", data);\n        console.log(\"data2:\", data2);\n        console.log(\"efect messageList:\", messageList);\n        setMessageList([...messageList, {\n          room: room,\n          author: username,\n          message: data,\n          time: new Date(Date.now()).getHours() + \":\" + new Date(Date.now()).getMinutes()\n        }]);\n        console.log(\"efect2 messageList:\", messageList);\n      });\n    }\n  }, [hubConnection]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-window\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-header\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Live Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message-container\",\n        children: messageList.map(messageContent => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message\",\n            id: username === messageContent.author ? \"you\" : \"other\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-content\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: messageContent.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message-meta\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"time\",\n                  children: messageContent.time\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  id: \"author\",\n                  children: messageContent.author\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-footer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: currentMessage,\n        placeholder: \"Hey...\",\n        onChange: event => {\n          setCurrentMessage(event.target.value);\n        },\n        onKeyPress: event => {\n          event.key === \"Enter\" && sendMessage();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sendMessage,\n        children: \"\\u25BA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"gDKz+24cg75HOdfXSFFmVy0ndt0=\");\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["/Users/macmini/Desktop/workspace/react-signalR-chat-app/client/src/Chat.tsx"],"names":["React","Chat","hubConnection","room","username","currentMessage","setCurrentMessage","useState","messageList","setMessageList","sendMessage","messageData","author","message","time","Date","now","getHours","getMinutes","invoke","console","log","useEffect","on","data","data2","map","messageContent","event","target","value","key"],"mappings":"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","sourcesContent":["import { HubConnection } from \"@microsoft/signalr\";\nimport React from \"react\";\n\ninterface IChatProps {\n  hubConnection?: HubConnection;\n  username: string;\n  room: string;\n}\n\nexport const Chat: React.FC<IChatProps> = ({\n  hubConnection,\n  room,\n  username,\n}) => {\n  const [currentMessage, setCurrentMessage] = React.useState(\"\");\n  const [messageList, setMessageList] = React.useState<any[]>([]);\n\n  const sendMessage = async () => {\n    if (currentMessage !== \"\" && hubConnection) {\n      const messageData = {\n        room: room,\n        author: username,\n        message: currentMessage,\n        time:\n          new Date(Date.now()).getHours() +\n          \":\" +\n          new Date(Date.now()).getMinutes(),\n      };\n\n      await hubConnection.invoke(\n        \"SendMessage\",\n        messageData.author,\n        messageData.message,\n      );\n      setMessageList([...messageList, messageData]);\n      setCurrentMessage(\"\");\n      console.log(\"sendmesage messageList:\", messageList);\n    }\n  };\n\n  React.useEffect(() => {\n    if (hubConnection) {\n      hubConnection.on(\"ReceiveMessage\", (data, data2) => {\n        console.log(\"data:\", data);\n        console.log(\"data2:\", data2);\n\n        console.log(\"efect messageList:\", messageList);\n\n        setMessageList([\n          ...messageList,\n          {\n            room: room,\n            author: username,\n            message: data,\n            time:\n              new Date(Date.now()).getHours() +\n              \":\" +\n              new Date(Date.now()).getMinutes(),\n          },\n        ]);\n\n        console.log(\"efect2 messageList:\", messageList);\n      });\n    }\n  }, [hubConnection]);\n\n  return (\n    <div className=\"chat-window\">\n      <div className=\"chat-header\">\n        <p>Live Chat</p>\n      </div>\n      <div className=\"chat-body\">\n        <div className=\"message-container\">\n          {messageList.map((messageContent) => {\n            return (\n              <div\n                className=\"message\"\n                id={username === messageContent.author ? \"you\" : \"other\"}\n              >\n                <div>\n                  <div className=\"message-content\">\n                    <p>{messageContent.message}</p>\n                  </div>\n                  <div className=\"message-meta\">\n                    <p id=\"time\">{messageContent.time}</p>\n                    <p id=\"author\">{messageContent.author}</p>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className=\"chat-footer\">\n        <input\n          type=\"text\"\n          value={currentMessage}\n          placeholder=\"Hey...\"\n          onChange={(event) => {\n            setCurrentMessage(event.target.value);\n          }}\n          onKeyPress={(event) => {\n            event.key === \"Enter\" && sendMessage();\n          }}\n        />\n        <button onClick={sendMessage}>&#9658;</button>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}