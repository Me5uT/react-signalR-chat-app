{"ast":null,"code":"var _jsxFileName = \"/Users/macmini/Desktop/workspace/react-signalR-chat-app/client/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./App.css\";\nimport { HubConnectionBuilder } from \"@microsoft/signalr\";\nimport { Chat } from \"./Chat\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = \"http://localhost:5000/chat\";\nexport const App = () => {\n  _s();\n\n  const [hubConnection, setHubConnection] = React.useState();\n  const [text, setText] = React.useState(\"\");\n  const [messageList, setMessageList] = React.useState([]);\n  const [showChat, setShowChat] = React.useState(false);\n  const [room, setRoom] = React.useState(\"\");\n  const [userName, setUserName] = React.useState(\"\"); // React.useEffect(() => {\n  //   createHubConnection();\n  // }, []);\n\n  React.useEffect(() => {\n    if (hubConnection) {\n      hubConnection.on(\"ReceiveMessage\", message => {\n        setMessageList([...messageList, message]);\n        console.log(\"message\", message);\n      });\n    }\n  }, [hubConnection]);\n\n  const createHubConnection = async () => {\n    const hubConnection = new HubConnectionBuilder().withUrl(URL).build();\n\n    try {\n      await hubConnection.start();\n      console.log(\"Bağlandı.\");\n    } catch (error) {\n      console.log(\"hata:\", error);\n    }\n\n    setHubConnection(hubConnection);\n  };\n\n  const sendMessage = async () => {\n    if (hubConnection) {\n      await hubConnection.invoke(\"SendMessage\", text);\n    }\n  };\n\n  const joinRoom = () => {\n    if (userName !== \"\" && room !== \"\") {\n      // socket.emit(\"join_room\", room);\n      createHubConnection();\n      setShowChat(true);\n    }\n\n    setMessageList(list => [...list, text]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !showChat ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"joinChatContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Join A Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Your name ...\",\n        onChange: event => {\n          setUserName(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Room ID ...\",\n        onChange: event => {\n          setRoom(event.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: joinRoom,\n        children: \"Join A Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Chat, {\n      hubConnection: hubConnection,\n      username: userName,\n      room: room\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"T6cveevhu9sqn/KI+2Bsxbwju+o=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/macmini/Desktop/workspace/react-signalR-chat-app/client/src/App.tsx"],"names":["React","HubConnectionBuilder","Chat","URL","App","hubConnection","setHubConnection","useState","text","setText","messageList","setMessageList","showChat","setShowChat","room","setRoom","userName","setUserName","useEffect","on","message","console","log","createHubConnection","withUrl","build","start","error","sendMessage","invoke","joinRoom","list","event","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAAwBC,oBAAxB,QAAoD,oBAApD;AACA,SAASC,IAAT,QAAqB,QAArB;;AAEA,MAAMC,GAAG,GAAG,4BAAZ;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCN,KAAK,CAACO,QAAN,EAA1C;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBT,KAAK,CAACO,QAAN,CAAuB,EAAvB,CAAxB;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCX,KAAK,CAACO,QAAN,CAAyB,EAAzB,CAAtC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0Bb,KAAK,CAACO,QAAN,CAAwB,KAAxB,CAAhC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBf,KAAK,CAACO,QAAN,CAAuB,EAAvB,CAAxB;AACA,QAAM,CAACS,QAAD,EAAWC,WAAX,IAA0BjB,KAAK,CAACO,QAAN,CAAuB,EAAvB,CAAhC,CANuB,CAQvB;AACA;AACA;;AAEAP,EAAAA,KAAK,CAACkB,SAAN,CAAgB,MAAM;AACpB,QAAIb,aAAJ,EAAmB;AACjBA,MAAAA,aAAa,CAACc,EAAd,CAAiB,gBAAjB,EAAoCC,OAAD,IAAa;AAC9CT,QAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAiBU,OAAjB,CAAD,CAAd;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,OAAvB;AACD,OAHD;AAID;AACF,GAPD,EAOG,CAACf,aAAD,CAPH;;AASA,QAAMkB,mBAAmB,GAAG,YAAY;AACtC,UAAMlB,aAAa,GAAG,IAAIJ,oBAAJ,GAA2BuB,OAA3B,CAAmCrB,GAAnC,EAAwCsB,KAAxC,EAAtB;;AAEA,QAAI;AACF,YAAMpB,aAAa,CAACqB,KAAd,EAAN;AACAL,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,KAHD,CAGE,OAAOK,KAAP,EAAc;AACdN,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBK,KAArB;AACD;;AAEDrB,IAAAA,gBAAgB,CAACD,aAAD,CAAhB;AACD,GAXD;;AAaA,QAAMuB,WAAW,GAAG,YAAY;AAC9B,QAAIvB,aAAJ,EAAmB;AACjB,YAAMA,aAAa,CAACwB,MAAd,CAAqB,aAArB,EAAoCrB,IAApC,CAAN;AACD;AACF,GAJD;;AAMA,QAAMsB,QAAQ,GAAG,MAAM;AACrB,QAAId,QAAQ,KAAK,EAAb,IAAmBF,IAAI,KAAK,EAAhC,EAAoC;AAClC;AACAS,MAAAA,mBAAmB;AACnBV,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AAEDF,IAAAA,cAAc,CAAEoB,IAAD,IAAU,CAAC,GAAGA,IAAJ,EAAUvB,IAAV,CAAX,CAAd;AACD,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cACG,CAACI,QAAD,gBACC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,eAFd;AAGE,QAAA,QAAQ,EAAGoB,KAAD,IAAW;AACnBf,UAAAA,WAAW,CAACe,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAX;AACD;AALH;AAAA;AAAA;AAAA;AAAA,cAFF,eASE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,WAAW,EAAC,aAFd;AAGE,QAAA,QAAQ,EAAGF,KAAD,IAAW;AACnBjB,UAAAA,OAAO,CAACiB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAP;AACD;AALH;AAAA;AAAA;AAAA;AAAA,cATF,eAgBE;AAAQ,QAAA,OAAO,EAAEJ,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,gBAoBC,QAAC,IAAD;AAAM,MAAA,aAAa,EAAEzB,aAArB;AAAoC,MAAA,QAAQ,EAAEW,QAA9C;AAAwD,MAAA,IAAI,EAAEF;AAA9D;AAAA;AAAA;AAAA;AAAA;AArBJ;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA5EM;;GAAMV,G;;KAAAA,G","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { HubConnection, HubConnectionBuilder } from \"@microsoft/signalr\";\nimport { Chat } from \"./Chat\";\n\nconst URL = \"http://localhost:5000/chat\";\n\nexport const App = () => {\n  const [hubConnection, setHubConnection] = React.useState<HubConnection>();\n  const [text, setText] = React.useState<string>(\"\");\n  const [messageList, setMessageList] = React.useState<string[]>([]);\n  const [showChat, setShowChat] = React.useState<boolean>(false);\n  const [room, setRoom] = React.useState<string>(\"\");\n  const [userName, setUserName] = React.useState<string>(\"\");\n\n  // React.useEffect(() => {\n  //   createHubConnection();\n  // }, []);\n\n  React.useEffect(() => {\n    if (hubConnection) {\n      hubConnection.on(\"ReceiveMessage\", (message) => {\n        setMessageList([...messageList, message]);\n        console.log(\"message\", message);\n      });\n    }\n  }, [hubConnection]);\n\n  const createHubConnection = async () => {\n    const hubConnection = new HubConnectionBuilder().withUrl(URL).build();\n\n    try {\n      await hubConnection.start();\n      console.log(\"Bağlandı.\");\n    } catch (error) {\n      console.log(\"hata:\", error);\n    }\n\n    setHubConnection(hubConnection);\n  };\n\n  const sendMessage = async () => {\n    if (hubConnection) {\n      await hubConnection.invoke(\"SendMessage\", text);\n    }\n  };\n\n  const joinRoom = () => {\n    if (userName !== \"\" && room !== \"\") {\n      // socket.emit(\"join_room\", room);\n      createHubConnection();\n      setShowChat(true);\n    }\n\n    setMessageList((list) => [...list, text]);\n  };\n\n  return (\n    <div className=\"App\">\n      {!showChat ? (\n        <div className=\"joinChatContainer\">\n          <h3>Join A Chat</h3>\n          <input\n            type=\"text\"\n            placeholder=\"Your name ...\"\n            onChange={(event) => {\n              setUserName(event.target.value);\n            }}\n          />\n          <input\n            type=\"text\"\n            placeholder=\"Room ID ...\"\n            onChange={(event) => {\n              setRoom(event.target.value);\n            }}\n          />\n          <button onClick={joinRoom}>Join A Room</button>\n        </div>\n      ) : (\n        <Chat hubConnection={hubConnection} username={userName} room={room} />\n      )}\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}