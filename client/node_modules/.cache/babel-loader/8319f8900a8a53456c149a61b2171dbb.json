{"ast":null,"code":"var _jsxFileName = \"C:\\\\development\\\\chat-app\\\\react-socketio-chat-app\\\\client\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport \"./App.css\";\nimport { HubConnectionBuilder } from \"@microsoft/signalr\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst URL = \"http://localhost:5000/chat\";\nexport const App = () => {\n  _s();\n\n  const [hubConnetion, setHubConnection] = React.useState();\n  const [text, setText] = React.useState(\"\");\n  const [messageList, setMessageList] = React.useState([]);\n  React.useEffect(() => {\n    createHubConnection();\n  }, []);\n  React.useEffect(() => {\n    if (hubConnetion) {\n      hubConnetion.on(\"ReceiveMessage\", message => {\n        setMessageList([...messageList, message]);\n      });\n    }\n  }, [hubConnetion]);\n\n  const createHubConnection = async () => {\n    const hubConnection = new HubConnectionBuilder().withUrl(URL).build();\n\n    try {\n      await hubConnection.start();\n      console.log(\"Bağlandı.\");\n    } catch (error) {\n      console.log(\"hata:\", error);\n    }\n\n    setHubConnection(hubConnection);\n  };\n\n  const sendMessage = async () => {\n    if (hubConnetion) {\n      await hubConnetion.invoke(\"SendMessage\", text);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-header\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Live Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-body\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-container\",\n          children: messageList.map(messageContent => {\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"message\" // id={username === messageContent.author ? \"you\" : \"other\"}\n              ,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"message-content\",\n                  children: /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: messageContent\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: text,\n          placeholder: \"Hey...\",\n          onChange: e => setText(e.target.value),\n          onKeyPress: event => {\n            event.key === \"Enter\" && sendMessage();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: sendMessage,\n          children: \"\\u25BA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"DHpga90DEgruSBaVznKP7AzxO+E=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/development/chat-app/react-socketio-chat-app/client/src/App.tsx"],"names":["React","HubConnectionBuilder","URL","App","hubConnetion","setHubConnection","useState","text","setText","messageList","setMessageList","useEffect","createHubConnection","on","message","hubConnection","withUrl","build","start","console","log","error","sendMessage","invoke","map","messageContent","e","target","value","event","key"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AACA,SAAwBC,oBAAxB,QAAoD,oBAApD;;AAEA,MAAMC,GAAG,GAAG,4BAAZ;AAEA,OAAO,MAAMC,GAAG,GAAG,MAAM;AAAA;;AACvB,QAAM,CAACC,YAAD,EAAeC,gBAAf,IAAmCL,KAAK,CAACM,QAAN,EAAzC;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,KAAK,CAACM,QAAN,CAAuB,EAAvB,CAAxB;AACA,QAAM,CAACG,WAAD,EAAcC,cAAd,IAAgCV,KAAK,CAACM,QAAN,CAAyB,EAAzB,CAAtC;AAEAN,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AACpBC,IAAAA,mBAAmB;AACpB,GAFD,EAEG,EAFH;AAIAZ,EAAAA,KAAK,CAACW,SAAN,CAAgB,MAAM;AACpB,QAAIP,YAAJ,EAAkB;AAChBA,MAAAA,YAAY,CAACS,EAAb,CAAgB,gBAAhB,EAAmCC,OAAD,IAAa;AAC7CJ,QAAAA,cAAc,CAAC,CAAC,GAAGD,WAAJ,EAAiBK,OAAjB,CAAD,CAAd;AACD,OAFD;AAGD;AACF,GAND,EAMG,CAACV,YAAD,CANH;;AAQA,QAAMQ,mBAAmB,GAAG,YAAY;AACtC,UAAMG,aAAa,GAAG,IAAId,oBAAJ,GAA2Be,OAA3B,CAAmCd,GAAnC,EAAwCe,KAAxC,EAAtB;;AAEA,QAAI;AACF,YAAMF,aAAa,CAACG,KAAd,EAAN;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACD,KAHD,CAGE,OAAOC,KAAP,EAAc;AACdF,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;AACD;;AAEDhB,IAAAA,gBAAgB,CAACU,aAAD,CAAhB;AACD,GAXD;;AAaA,QAAMO,WAAW,GAAG,YAAY;AAC9B,QAAIlB,YAAJ,EAAkB;AAChB,YAAMA,YAAY,CAACmB,MAAb,CAAoB,aAApB,EAAmChB,IAAnC,CAAN;AACD;AACF,GAJD;;AAMA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,mBAAf;AAAA,oBACGE,WAAW,CAACe,GAAZ,CAAiBC,cAAD,IAAoB;AACnC,gCACE;AACE,cAAA,SAAS,EAAC,SADZ,CAEE;AAFF;AAAA,qCAIE;AAAA,uCACE;AAAK,kBAAA,SAAS,EAAC,iBAAf;AAAA,yCACE;AAAA,8BAAIA;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,oBADF;AAYD,WAbA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAsBE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,KAAK,EAAElB,IAFT;AAGE,UAAA,WAAW,EAAC,QAHd;AAIE,UAAA,QAAQ,EAAGmB,CAAD,IAAOlB,OAAO,CAACkB,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ1B;AAKE,UAAA,UAAU,EAAGC,KAAD,IAAW;AACrBA,YAAAA,KAAK,CAACC,GAAN,KAAc,OAAd,IAAyBR,WAAW,EAApC;AACD;AAPH;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAQ,UAAA,OAAO,EAAEA,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuCD,CA3EM;;GAAMnB,G;;KAAAA,G","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport { HubConnection, HubConnectionBuilder } from \"@microsoft/signalr\";\n\nconst URL = \"http://localhost:5000/chat\";\n\nexport const App = () => {\n  const [hubConnetion, setHubConnection] = React.useState<HubConnection>();\n  const [text, setText] = React.useState<string>(\"\");\n  const [messageList, setMessageList] = React.useState<string[]>([]);\n\n  React.useEffect(() => {\n    createHubConnection();\n  }, []);\n\n  React.useEffect(() => {\n    if (hubConnetion) {\n      hubConnetion.on(\"ReceiveMessage\", (message) => {\n        setMessageList([...messageList, message]);\n      });\n    }\n  }, [hubConnetion]);\n\n  const createHubConnection = async () => {\n    const hubConnection = new HubConnectionBuilder().withUrl(URL).build();\n\n    try {\n      await hubConnection.start();\n      console.log(\"Bağlandı.\");\n    } catch (error) {\n      console.log(\"hata:\", error);\n    }\n\n    setHubConnection(hubConnection);\n  };\n\n  const sendMessage = async () => {\n    if (hubConnetion) {\n      await hubConnetion.invoke(\"SendMessage\", text);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"chat-window\">\n        <div className=\"chat-header\">\n          <p>Live Chat</p>\n        </div>\n        <div className=\"chat-body\">\n          <div className=\"message-container\">\n            {messageList.map((messageContent) => {\n              return (\n                <div\n                  className=\"message\"\n                  // id={username === messageContent.author ? \"you\" : \"other\"}\n                >\n                  <div>\n                    <div className=\"message-content\">\n                      <p>{messageContent}</p>\n                    </div>\n                  </div>\n                </div>\n              );\n            })}\n          </div>\n        </div>\n        <div className=\"chat-footer\">\n          <input\n            type=\"text\"\n            value={text}\n            placeholder=\"Hey...\"\n            onChange={(e) => setText(e.target.value)}\n            onKeyPress={(event) => {\n              event.key === \"Enter\" && sendMessage();\n            }}\n          />\n          <button onClick={sendMessage}>&#9658;</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}